name: Update gVisor Version

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *" # daily at 06:00 UTC

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: update-gvisor
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update GVISOR_VERSION and open/ensure PR
        shell: bash
        run: |
          set -euo pipefail

          # 1) Find latest release-* tag upstream
          latest_tag="$(git ls-remote --tags --refs https://github.com/google/gvisor.git \
            | awk -F/ '/refs\/tags\/release-/{print $NF}' \
            | sort -V | tail -n1)"
          [[ -n "$latest_tag" ]] || { echo "No release-* tags found"; exit 1; }
          ver="${latest_tag#release-}"

          # 2) Read current version (if file exists)
          current=""
          [[ -f GVISOR_VERSION ]] && current="$(tr -d '\r\n' < GVISOR_VERSION || true)"

          # 3) Skip if already up-to-date
          if [[ "$ver" == "${current}" ]]; then
            echo "GVISOR_VERSION already $ver â€” nothing to do."
            exit 0
          fi

          branch="chore/update-gvisor-$ver"

          # 4) Prepare branch, write file, commit, push
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"
          git checkout -B "$branch"

          printf '%s\n' "$ver" > GVISOR_VERSION
          if git diff --quiet -- GVISOR_VERSION; then
            echo "No file changes detected after write; exiting."
            exit 0
          fi

          commit_msg=$'chore(gvisor): update to '"$ver"$'\n\n'
          commit_msg+=$'Update GVISOR_VERSION from `'"${current}"'` to `'"${ver}"'`.\n'
          commit_msg+=$'Upstream tag: '"${latest_tag}"$'\n'
          [[ -n "$current" ]] && commit_msg+=$'Diff: https://github.com/google/gvisor/compare/release-'"${current}"'...'"${latest_tag}"$'\n'

          git add GVISOR_VERSION
          git commit -m "$commit_msg"
          git push -u origin "$branch" --force-with-lease

          # 5) If PR already open for this head branch, don't create another
          owner='${{ github.repository_owner }}'
          existing_url="$(gh pr list --state open --head "${owner}:${branch}" --json url --jq '.[0].url // empty')"
          if [[ -n "$existing_url" ]]; then
            echo "PR already open: $existing_url"
            exit 0
          fi

          # 6) Create PR against default branch
          base_branch="$(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)"
          title="chore: bump gVisor to ${ver}"
          body=$'_Update `GVISOR_VERSION` to `'"${ver}"'` (was `'"${current}"'`)._\n'
          [[ -n "$current" ]] && body+=$'\nDiff: https://github.com/google/gvisor/compare/release-'"${current}"'...'"${latest_tag}"$'\n'
          body+=$'\n**Release note**:\n```improvement operator\nUpdated gVisor binaries to `'"${ver}"'`.\n```'

          gh pr create --base "$base_branch" --head "$branch" --title "$title" --body "$body"

